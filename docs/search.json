[
  {
    "objectID": "codebase.html",
    "href": "codebase.html",
    "title": "Codebase",
    "section": "",
    "text": "Code via quarto::quarto_render() in ../quarto/, data via ../data/\nAll outputs are regenerated for fully reproducible research\n\nAbstract\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       macOS Sequoia 15.4.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Australia/Brisbane\n date     2025-06-02\n pandoc   3.6.4 @ /opt/homebrew/bin/ (via rmarkdown)\n quarto   1.7.29 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cachem        1.1.0   2024-05-16 [1] CRAN (R 4.4.0)\n cli           3.6.5   2025-04-23 [1] CRAN (R 4.4.1)\n conflicted  * 1.2.0   2023-02-01 [1] CRAN (R 4.4.0)\n devtools      2.4.5   2022-10-11 [1] CRAN (R 4.4.0)\n digest        0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.4.0)\n evaluate      1.0.3   2025-01-10 [1] CRAN (R 4.4.1)\n fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.0)\n fs            1.6.6   2025-04-12 [1] CRAN (R 4.4.1)\n glue          1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.1)\n htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n httpuv        1.6.16  2025-04-16 [1] CRAN (R 4.4.1)\n jsonlite      2.0.0   2025-03-27 [1] CRAN (R 4.4.1)\n knitr         1.50    2025-03-16 [1] CRAN (R 4.4.1)\n later         1.4.2   2025-04-08 [1] CRAN (R 4.4.1)\n lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.4.0)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.4.0)\n memoise       2.0.1   2021-11-26 [1] CRAN (R 4.4.0)\n mime          0.13    2025-03-17 [1] CRAN (R 4.4.1)\n miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.4.0)\n pkgbuild      1.4.8   2025-05-26 [1] CRAN (R 4.4.1)\n pkgload       1.4.0   2024-06-28 [1] CRAN (R 4.4.0)\n profvis       0.4.0   2024-09-20 [1] CRAN (R 4.4.1)\n promises      1.3.2   2024-11-28 [1] CRAN (R 4.4.1)\n purrr         1.0.4   2025-02-05 [1] CRAN (R 4.4.1)\n R6            2.6.1   2025-02-15 [1] CRAN (R 4.4.1)\n Rcpp          1.0.14  2025-01-12 [1] CRAN (R 4.4.1)\n remotes       2.5.0   2024-03-17 [1] CRAN (R 4.4.0)\n rlang         1.1.6   2025-04-11 [1] CRAN (R 4.4.1)\n rmarkdown     2.29    2024-11-04 [1] CRAN (R 4.4.1)\n rstudioapi    0.17.1  2024-10-22 [1] CRAN (R 4.4.1)\n sessioninfo   1.2.3   2025-02-05 [1] CRAN (R 4.4.1)\n shiny         1.10.0  2024-12-14 [1] CRAN (R 4.4.1)\n urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.4.0)\n usethis       3.1.0   2024-11-26 [1] CRAN (R 4.4.1)\n vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.4.0)\n xfun          0.52    2025-04-02 [1] CRAN (R 4.4.1)\n xtable        1.8-4   2019-04-21 [1] CRAN (R 4.4.0)\n yaml          2.3.10  2024-07-26 [1] CRAN (R 4.4.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n * ── Packages attached to the search path.\n\n──────────────────────────────────────────────────────────────────────────────\n\n\n\n\nContact\ngeorge.roff@csiro.au\nhttps://github.com/marine-ecologist/seedbox"
  },
  {
    "objectID": "Figure S2.html",
    "href": "Figure S2.html",
    "title": "Figure S2",
    "section": "",
    "text": "kmm(r) values on the y:\n\n&gt; 1 High values (e.g. high settler counts) tend to occur near each other â†’ positive spatial autocorrelation\n~1 No correlation in settler values at that distance â†’ spatial randomness\n&lt; 1 High values avoid each other; negative correlation (alternation of high/low marks)\n\ngrey CI ribbon is output from a null model that preserves the point locations and randomizes the marks (settler counts) to account for underlying spatial structure (i.e. random labeling null model).\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(spatstat)\nlibrary(janitor)\nlibrary(sf)\n\n# read tile data\ntiles &lt;- readxl::read_xlsx(\"/Users/rof011/seedbox2/tiles.xlsx\") |&gt;\n  group_by(id) |&gt; \n  summarise(plot=mean(plot), settlers=sum(count)) \n\n# import slrp controls\ntiles_slrp &lt;- readxl::read_xlsx(\"/Users/rof011/seedbox2/data_SetTilesSlowReleaseExp3.xlsx\") |&gt;\n  clean_names() |&gt; \n  rename(id=tile_number) |&gt; \n  group_by(id) |&gt; \n  summarise(settlers=sum(settler_count)) |&gt; \n  mutate(seedbox=0) |&gt;  #, dsm=NA, height=NA) |&gt; \n  drop_na(id)\n\n# vectorise inner tiles adjacent to seedboxes\ninner &lt;- c(1217, 1268, 1253, 1121, 1207, 1240, 1021, 1291, 1217,\n           1084, 1039, 1040, 1213, 1254, 1029, \n           1099, 1034, 1284, 1027, 1252, 1056, \n           1073, 1086, 1002, 1005, 1179, 1047,\n           1187, 1104, 1149, 1130, 1197, 1127,\n           1194, 1193, 1107, 1191, 1175, 1178)\n\n\n# read spatial data\nseedbox_st &lt;- rbind(\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox2.geojson\", quiet=TRUE) |&gt; mutate(seedbox=2) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox3.geojson\", quiet=TRUE) |&gt; mutate(seedbox=3) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox4.geojson\", quiet=TRUE) |&gt; mutate(seedbox=4) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox5.geojson\", quiet=TRUE) |&gt; mutate(seedbox=5) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox6.geojson\", quiet=TRUE) |&gt; mutate(seedbox=6) |&gt; st_transform(32755)) |&gt; \n  left_join(tiles |&gt; select(-plot), by=\"id\") |&gt; drop_na(settlers) |&gt; \n  filter(!seedbox == 1) |&gt; \n  mutate(seedbox = seedbox - 1)\n\n\n# Convert to spatial point pattern (ppp) with settler counts as marks\nppp_settlers_st &lt;- as.ppp(\n  st_coordinates(seedbox_st),\n  W = as.owin(st_bbox(seedbox_st))\n)\n\nmarks(ppp_settlers_st) &lt;- (seedbox_st$settlers)\nKmark_result_st &lt;- markcorr(ppp_settlers_st, correction = \"Ripley\",  r = seq(0, 8, by = 0.2))\n\n## outer\nseedbox_st_outer &lt;- seedbox_st |&gt; dplyr::filter(!id %in% inner)\nppp_settlers_st_outer &lt;- as.ppp(\n  st_coordinates(seedbox_st_outer),\n  W = as.owin(st_bbox(seedbox_st_outer))\n)\n\nmarks(ppp_settlers_st_outer) &lt;- (seedbox_st_outer$settlers)\nKmark_result_st_outer &lt;- markcorr(ppp_settlers_st_outer, correction = \"Ripley\",  r = seq(0, 8, by = 0.2))\n\n\n# extrct values and. combine kmark results into a single df:\nkmm_st_df &lt;- as.data.frame(Kmark_result_st)[, c(\"r\", \"iso\", \"theo\")]\nnames(kmm_st_df) &lt;- c(\"r\", \"observed\", \"theoretical\")\nkmm_st_df_outer &lt;- as.data.frame(Kmark_result_st_outer)[, c(\"r\", \"iso\", \"theo\")]\nnames(kmm_st_df_outer) &lt;- c(\"r\", \"observed\", \"theoretical\")\nkmm_st_plot &lt;- rbind(kmm_st_df |&gt; mutate(factor=\"all_tiles\"),\n                     kmm_st_df_outer |&gt; mutate(factor=\"outer_array\")\n                     ) \n\n\n\ncoords &lt;- st_coordinates(seedbox_st)\nwin &lt;- as.owin(st_bbox(seedbox_st))\n\n\n# Repeat 999 times\nsimulated_kmm &lt;- map_dfr(1:999, function(i) {\n  ppp &lt;- as.ppp(coords, W = win)\n  marks(ppp) &lt;- sample(seedbox_st$settlers)\n  kmm &lt;- markcorr(ppp, correction = \"Ripley\", r = seq(0, 8, by = 0.05))\n  df &lt;- as.data.frame(kmm)[, c(\"r\", \"iso\")]\n  df$id &lt;-  i\n  names(df) &lt;-  c(\"r\", \"observed\", \"id\")\n  df\n})\n\n\n# Compute percentiles for each r\nenvelope_bounds_st &lt;- simulated_kmm |&gt;\n  drop_na() |&gt; \n  group_by(r) |&gt;\n  summarise(\n    lower = quantile(observed, 0.05),\n    upper = quantile(observed, 0.99),\n    .groups = \"drop\"\n  ) |&gt; mutate(lower=0)\n\nggplot() + theme_bw() + \n  xlim(round(min(nndist(ppp_settlers_st)), 1), 8) +\n  geom_ribbon(data = envelope_bounds_st, aes(x = r, ymin = lower, ymax = upper), fill = \"grey20\", alpha=0.1) +\n  geom_line(data=kmm_st_plot, aes(r, observed, color=factor), linewidth=1.5) +\n  scale_y_continuous(limits=c(0, 40), breaks=seq(-10, 40, 10)) +\n  scale_x_continuous(limits=c(0, 8), breaks=seq(0, 8, 1)) + xlab(\"Distance betwen tiles\") +\n  geom_hline(yintercept = 1, linewidth = 0.5, alpha=0.6, linetype = \"solid\") + \n  scale_color_manual(\n    labels = c(\"all_tiles\" = \"All tiles\", \"outer_array\" = \"outer array\"),\n    values = c(\"all_tiles\" = \"turquoise4\", \"outer_array\" = \"cyan2\"),\n    name = NULL\n  )"
  },
  {
    "objectID": "Figure 4.html",
    "href": "Figure 4.html",
    "title": "Figure 4",
    "section": "",
    "text": "Figure 4a\n\n\nCode\n# load libraries\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(stars)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(leaflet)\nlibrary(fields)\nlibrary(terra)\n\n# read tile data\ntiles &lt;- readxl::read_xlsx(\"/Users/rof011/seedbox2/tiles.xlsx\") |&gt;\n  group_by(id) |&gt; \n  summarise(plot=mean(plot), settlers=sum(count)) \n\n# import slrp controls\ntiles_slrp &lt;- readxl::read_xlsx(\"/Users/rof011/seedbox2/data_SetTilesSlowReleaseExp3.xlsx\") |&gt;\n  clean_names() |&gt; \n  rename(id=tile_number) |&gt; \n  group_by(id) |&gt; \n  summarise(settlers=sum(settler_count)) |&gt; \n  mutate(seedbox=0) |&gt;  #, dsm=NA, height=NA) |&gt; \n  drop_na(id)\n\n# vectorise inner tiles adjacent to seedboxes\ninner &lt;- c(1217, 1268, 1253, 1121, 1207, 1240, 1021, 1291, 1217,\n           1084, 1039, 1040, 1213, 1254, 1029, \n           1099, 1034, 1284, 1027, 1252, 1056, \n           1073, 1086, 1002, 1005, 1179, 1047,\n           1187, 1104, 1149, 1130, 1197, 1127,\n           1194, 1193, 1107, 1191, 1175, 1178)\n\n\n# read spatial data\nseedbox &lt;- rbind(\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox2.geojson\", quiet=TRUE) |&gt; mutate(seedbox=2) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox3.geojson\", quiet=TRUE) |&gt; mutate(seedbox=3) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox4.geojson\", quiet=TRUE) |&gt; mutate(seedbox=4) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox5.geojson\", quiet=TRUE) |&gt; mutate(seedbox=5) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox6.geojson\", quiet=TRUE) |&gt; mutate(seedbox=6) |&gt; st_transform(32755)) |&gt; \n#  st_transform(4326) |&gt; \n  left_join(tiles |&gt; select(-plot), by=\"id\") |&gt; drop_na(settlers) |&gt; \n  filter(!seedbox == 1) |&gt; \n  mutate(seedbox = seedbox - 1)\n\n# filter to only outer array\nseedbox_outer &lt;- seedbox |&gt; filter(!id %in% inner)\n\n# Buffer first to extend spatial domain\nseedbox_outer_buf &lt;- seedbox_outer |&gt; st_buffer(10)\n\n# Create a grid over the buffered area\ngrd &lt;- seedbox_outer_buf |&gt;\n  st_bbox() |&gt;\n  st_as_stars(dx = 0.05)\n\n# extract grid coordinates for prediction\ngrd_coords &lt;- as.data.frame(st_coordinates(grd))\n\n# extract buffered coordinates for fitting the TPS\ncoords &lt;- st_coordinates(seedbox_outer)\n\n# fit the TPS using unbuffered coordinates, extend grid\ntps_model &lt;- suppressWarnings(\n  Tps(coords, seedbox_outer$settlers, method = \"REML\")\n)\n\n\nWarning: \nGrid searches over lambda (nugget and sill variances) with  minima at the endpoints: \n  (REML) Restricted maximum likelihood \n   minimum at  right endpoint  lambda  =  918.891 (eff. df= 3.000899 )\n\n\nCode\nseedbox_hull &lt;- seedbox |&gt; st_buffer(1.5) |&gt; concaveman::concaveman(2,10) |&gt; terra::vect()\nseedbox_area &lt;- seedbox |&gt; st_buffer(1) |&gt;  concaveman::concaveman(2,10) \n\ngrd_coords$predicted_settlers &lt;- suppressWarnings(\n  predict(tps_model, as.matrix(grd_coords[, c(\"x\", \"y\")]))\n)\ngrd$predicted_settlers &lt;- array(grd_coords$predicted_settlers, dim = dim(grd))\ntps_raster &lt;- terra::rast(grd[\"predicted_settlers\"]) \n\nseed_area &lt;- seedbox |&gt; st_buffer(1) |&gt; concaveman::concaveman(2,10) \n\n\n# expand rugosity\nreef_area_cm2 &lt;- 1 * 100^2          # 1 m² to cm²\nrugosity &lt;- 1.67                     # rugosity factor\ntile_area_cm2 &lt;- 70                # single tile area\n\nsurface_area_cm2 &lt;- reef_area_cm2 * rugosity * 0.8\nn_tiles &lt;- surface_area_cm2 / tile_area_cm2\n\n\n# mask and crop raster\nmasked_raster &lt;- terra::mask(tps_raster, seed_area, updatevalue = NA)\ncropped_raster &lt;- terra::crop(masked_raster, terra::ext(masked_raster)) |&gt; \n  as.data.frame(xy = TRUE, na.rm = TRUE) |&gt; \n  mutate(predicted_settlers = predicted_settlers * n_tiles)\n\n\ngeonadir_url &lt;- \"https://api.geonadir.com/cog_tiles/ortho/9723/e534dfb7-6121-4429-bad4-68e9da770711/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMzMjI2MjkzLCJpYXQiOjE3MzMxMzk4OTMsImp0aSI6ImM0ODRmNTc0OTZkNzRiNmZiMWZjZDlmNDViYzViZjQ2IiwidXNlcl9pZCI6MTI1NzR9.IIqFtk6NwEErJiUNZwIDodEgwyR-nxqECf92oHssggY/{z}/{x}/{y}\"\n\n\nlibrary(tmap)\ntmap_mode(\"view\")\ntm_tiles(server = geonadir_url, \n         zoom=21, \n         max.native.zoom=22) +\ntm_shape(masked_raster$predicted_settlers * n_tiles) +\n  tm_raster(\"predicted_settlers\",\n            col.scale = tm_scale_continuous(values = \"-spectral\"),\n            col_alpha = 0.7) +\ntm_shape(seedbox_area) +\n  tm_polygons(fill_alpha = 0, \n              col = \"black\") +\ntm_view(set_zoom_limits = c(14, 22), \n        zoom = 14)\n\n\n\n\n\n\n\n\n\nFigure 4c\n\n\nCode\nacdc &lt;- read.csv(\"../data/S103288A017_LSDTrial27N_A0.csv\", sep = \";\") |&gt;\n  janitor::clean_names() |&gt;\n  mutate(date_time = dmy_hms(date_time)) |&gt;\n  # select(date_time, speed_1_0_3m, dir_1_0_3m) |&gt;\n  dplyr::filter(date_time &gt; ymd_hms(\"2024-11-27 00:00:00\")) |&gt; \n  dplyr::filter(date_time &lt; ymd_hms(\"2024-11-28 06:00:00\")) |&gt; \n    select(-battery, -heading, -pitch, -roll, -pressure, -temperature, -analog_in1, -analog_in2, -x)\n\n\nacdc_long &lt;- acdc |&gt;\n  select(date_time, starts_with(\"speed_\"), starts_with(\"dir_\")) |&gt;\n  pivot_longer(\n  cols = -date_time,\n  names_to = c(\".value\", \"depth\"),\n  names_pattern = \"(speed|dir)_(.*)\"\n  ) |&gt;\n  mutate(depth = str_extract(depth, \"(?&lt;=_)[0-9_]+(?=m)\"),\n  depth = str_replace_all(depth, \"_\", \".\"),\n  depth = parse_number(depth)) \n\n# ggplot() + theme_bw() + facet_wrap(~depth) +\n#   geom_line(data=acdc_long |&gt; filter(depth==1.1), \n#             aes(date_time, rollmean(dir, k = 11, fill = NA, align = \"center\"))) +\n#   scale_color_distiller(palette=\"RdBu\") + \n#   geom_vline(xintercept = ymd_hms(\"2024-11-27 10:30:00\"), color=\"darkred\")\n# \n# ggplot() + theme_bw() + facet_wrap(~depth) +\n#   geom_line(data=acdc_long |&gt; filter(depth==1.1), \n#             aes(date_time, rollmean(speed, k = 11, fill = NA, align = \"center\"))) +\n#   scale_color_distiller(palette=\"RdBu\") + \n#   geom_vline(xintercept = ymd_hms(\"2024-11-27 10:30:00\"), color=\"darkblue\")\n\n  acdc_filtered &lt;- acdc_long |&gt; \n  dplyr::filter(depth &gt;= 0.5 & depth &lt;=4) |&gt; \n  group_by(date_time) |&gt; \n  summarise(depth = mean(depth), speed = mean(speed), dir = mean(dir))\n\n\n\n\ndir_b &lt;- acdc_long |&gt; dplyr::filter(depth &lt; 2, date_time &gt; ymd_hms(\"2024-11-27 11:02:00\"), date_time &lt; ymd_hms(\"2024-11-27 22:05:00\")) |&gt; pull(dir) # |&gt; mean() \nspeed_b &lt;- acdc_long |&gt; dplyr::filter(depth &lt; 2, date_time &gt; ymd_hms(\"2024-11-27 11:02:00\"), date_time &lt; ymd_hms(\"2024-11-27 22:05:00\")) |&gt; pull(speed) # |&gt; mean()\n# nocov start\n\n\nggwindrose &lt;- function(speed, direction, n_directions = 8, n_speeds = 5,\n                       speed_cuts = NA, col_pal = \"GnBu\", legend_title = \"Wind speed (m/s)\",\n                       calm_wind = 0, n_col = 1, facet = NULL, plot_title = \"\") {\n  stopifnot(\n    is.numeric(speed), is.numeric(direction),\n    length(speed) == length(direction),\n    all(direction &gt;= 0 & direction &lt;= 360, na.rm = TRUE),\n    is.numeric(n_directions), length(n_directions) == 1,\n    is.numeric(n_speeds), length(n_speeds) == 1,\n    is.numeric(calm_wind), length(calm_wind) == 1,\n    is.character(legend_title) || is.expression(legend_title),\n    col_pal %in% hcl.pals()\n  )\n\n  include_facet &lt;- !is.null(facet)\n  if (include_facet) {\n    stopifnot(is.character(facet) || is.factor(facet))\n    if (length(facet) == 1) facet &lt;- rep(facet, length(speed))\n    stopifnot(length(facet) == length(speed))\n  }\n\n  optimal_n_dir &lt;- c(4, 8, 16)\n  if (!(n_directions %in% optimal_n_dir)) {\n    n_directions &lt;- optimal_n_dir[which.min(abs(n_directions - optimal_n_dir))]\n    message(\"Using the closest optimal number of wind directions (\", n_directions, \")\")\n  }\n\n  dir_labels &lt;- switch(as.character(n_directions),\n    \"4\" = c(\"N\", \"E\", \"S\", \"W\"),\n    \"8\" = c(\"N\", \"NE\", \"E\", \"SE\", \"S\", \"SW\", \"W\", \"NW\"),\n    \"16\" = c(\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\",\n             \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\")\n  )\n\n  dir_bin_width &lt;- 360 / n_directions\n  dir_bin_cuts &lt;- seq(dir_bin_width / 2, 360 - dir_bin_width / 2, dir_bin_width)\n  dir_intervals &lt;- findInterval(direction, dir_bin_cuts)\n  dir_intervals[dir_intervals == 0] &lt;- n_directions\n  dir_bin &lt;- factor(dir_intervals, labels = dir_labels)\n\n  if (is.numeric(speed_cuts)) {\n    speed_cuts &lt;- sort(unique(c(min(speed, na.rm = TRUE), speed_cuts, max(speed, na.rm = TRUE))))\n    spd_bin &lt;- cut(speed, breaks = speed_cuts, include.lowest = TRUE)\n  } else {\n    spd_bin &lt;- cut(speed, breaks = n_speeds)\n  }\n\n  spd_cols &lt;- hcl.colors(length(levels(spd_bin)), col_pal, rev = TRUE)\n  if (length(spd_cols) != length(levels(spd_bin))) {\n    spd_bin &lt;- cut(speed, breaks = length(spd_cols))\n  }\n\n  if (include_facet) {\n    df &lt;- as.data.frame(table(dir_bin, spd_bin, facet))\n    df$proportion &lt;- ave(df$Freq, df$facet, FUN = function(x) x / sum(x))\n  } else {\n    df &lt;- as.data.frame(table(dir_bin, spd_bin))\n    df$proportion &lt;- df$Freq / sum(df$Freq)\n  }\n\n  p &lt;- ggplot(df, aes(x = dir_bin, fill = spd_bin, y = proportion)) +\n    geom_bar(stat = \"identity\", color = \"black\") +\n    scale_x_discrete(drop = FALSE) +\n    scale_fill_manual(name = legend_title, values = spd_cols) +\n    coord_polar(start = 2 * pi - pi / n_directions) +\n    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n    theme_minimal() +\n    theme(axis.title = element_blank()) +\n    labs(title = plot_title)\n\n  if (include_facet) {\n    p &lt;- p + facet_wrap(~facet, ncol = n_col)\n  }\n\n  return(p)\n}\n\n\nggwindrose(speed_b, dir_b, n_directions = 16, speed_cuts = c(0, 0.025, 0.05, 0.075, 0.1, 0.125, 0.15),\n           n_speeds = 6)"
  },
  {
    "objectID": "Figure 2.html",
    "href": "Figure 2.html",
    "title": "Figure 2",
    "section": "",
    "text": "Code\n# load libraries\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(leaflet)\n\n\n# permanent link to orthoomosaic via geonadir.com:\n\ngeonadir_url &lt;- \"https://api.geonadir.com/cog_tiles/ortho/9723/e534dfb7-6121-4429-bad4-68e9da770711/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMzMjI2MjkzLCJpYXQiOjE3MzMxMzk4OTMsImp0aSI6ImM0ODRmNTc0OTZkNzRiNmZiMWZjZDlmNDViYzViZjQ2IiwidXNlcl9pZCI6MTI1NzR9.IIqFtk6NwEErJiUNZwIDodEgwyR-nxqECf92oHssggY/{z}/{x}/{y}\"\n\n# load geojson spatial files for tile locations, join with the tile data:\nseedbox_tile_locations_sf &lt;- rbind(\n  st_read(\"../data/Seedbox2.geojson\", quiet=TRUE) |&gt; mutate(seedbox=1) |&gt; st_transform(32755),\n  st_read(\"../data/Seedbox3.geojson\", quiet=TRUE) |&gt; mutate(seedbox=2) |&gt; st_transform(32755),\n  st_read(\"../data/Seedbox4.geojson\", quiet=TRUE) |&gt; mutate(seedbox=3) |&gt; st_transform(32755),\n  st_read(\"../data/Seedbox5.geojson\", quiet=TRUE) |&gt; mutate(seedbox=4) |&gt; st_transform(32755),\n  st_read(\"../data/Seedbox6.geojson\", quiet=TRUE) |&gt; mutate(seedbox=5) |&gt; st_transform(32755)\n) |&gt; st_transform(4326)  \n\nseedbox_tile_locations &lt;- seedbox_tile_locations_sf %&gt;%  \n  st_coordinates() |&gt;\n  as.data.frame() |&gt;\n  rename(x = X, y = Y) |&gt;\n  bind_cols(st_drop_geometry(seedbox_tile_locations_sf))\n\n\n# Map tile locations on orthomosaic\nleaflet(seedbox_tile_locations) %&gt;%\n  addProviderTiles('Esri.WorldImagery', group = \"&lt;b&gt; [Seascape]&lt;/b&gt; satellite map\", \n                   options=providerTileOptions(opacity=5, maxNativeZoom=18,maxZoom=100)) |&gt;\n  addTiles(urlTemplate = geonadir_url, \n           attribution = \"Geoff Carlin @ CSIRO\", \n           options = providerTileOptions(minZoom = 17, maxZoom = 30)) %&gt;%\n  addCircleMarkers(~seedbox_tile_locations$x, ~seedbox_tile_locations$y,\n                   group=\"seedbox\",\n                   radius = 5,\n                   fillColor = \"white\",\n                   fillOpacity = 0.8, \n                   stroke = TRUE, \n                   color = \"black\", \n                   weight = 1)"
  },
  {
    "objectID": "Figure 3.html",
    "href": "Figure 3.html",
    "title": "Figure 3",
    "section": "",
    "text": "Figure 3a\nSpatial map of tiles within seedboxes coloured by settler density (where ‘x’ indicates zero settlement\n\n\nCode\n# load libraries\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(leaflet)\nlibrary(brms)\n\n# read tile data\ntiles &lt;- readxl::read_xlsx(\"/Users/rof011/seedbox2/tiles.xlsx\") |&gt;\n  group_by(id) |&gt; \n  summarise(plot=mean(plot), settlers=sum(count)) \n\n# import slrp controls\ntiles_slrp &lt;- readxl::read_xlsx(\"/Users/rof011/seedbox2/data_SetTilesSlowReleaseExp3.xlsx\") |&gt;\n  clean_names() |&gt; \n  rename(id=tile_number) |&gt; \n  group_by(id) |&gt; \n  summarise(settlers=sum(settler_count)) |&gt; \n  mutate(seedbox=0) |&gt;  #, dsm=NA, height=NA) |&gt; \n  drop_na(id)\n\n# vectorise inner tiles adjacent to seedboxes\ninner &lt;- c(1217, 1268, 1253, 1121, 1207, 1240, 1021, 1291, 1217,\n           1084, 1039, 1040, 1213, 1254, 1029, \n           1099, 1034, 1284, 1027, 1252, 1056, \n           1073, 1086, 1002, 1005, 1179, 1047,\n           1187, 1104, 1149, 1130, 1197, 1127,\n           1194, 1193, 1107, 1191, 1175, 1178)\n\n\n# read spatial data\nseedbox &lt;- rbind(\n  # st_read(\"/Users/rof011/seedbox2/shp/Seedbox1.geojson\", quiet=TRUE) |&gt; mutate(seedbox=1) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox2.geojson\", quiet=TRUE) |&gt; mutate(seedbox=2) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox3.geojson\", quiet=TRUE) |&gt; mutate(seedbox=3) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox4.geojson\", quiet=TRUE) |&gt; mutate(seedbox=4) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox5.geojson\", quiet=TRUE) |&gt; mutate(seedbox=5) |&gt; st_transform(32755),\n  st_read(\"/Users/rof011/seedbox2/shp/Seedbox6.geojson\", quiet=TRUE) |&gt; mutate(seedbox=6) |&gt; st_transform(32755)) |&gt; \n  st_transform(4326) |&gt; \n  left_join(tiles |&gt; select(-plot), by=\"id\") |&gt; drop_na(settlers) |&gt; \n  # add \"signal\" binary where count exceeds 80% CI of controls\n  mutate(signal = ifelse(settlers &lt; t.test(tiles_slrp$settlers, conf.level = 0.80)$conf.int[[2]], \"none\", \"signal\")) |&gt; \n  filter(!seedbox == 1) |&gt; \n  mutate(seedbox = seedbox - 1)\n\n\n# get centroids of tiles\nseedbox_centroids &lt;- seedbox %&gt;%\n  group_by(seedbox) %&gt;%\n  summarize(geometry = st_centroid(st_union(geometry))) %&gt;%  \n  bind_cols(st_coordinates(.))\n\n# set legend scale\nbreaks_vals &lt;- c(2, 5, 10, 20, 50, 100, 250, 500, 1000)\n\n\nggplot() + theme_bw() +\n  geom_sf(data=seedbox |&gt; st_transform(4326) |&gt; dplyr::filter(signal==\"signal\"), \n          aes(fill = log(settlers)), shape = 21, stroke=0.1, size = 1.8, show.legend = TRUE) +\n  geom_sf(data=seedbox |&gt; st_transform(4326) |&gt; dplyr::filter(signal==\"none\"), \n          shape = 4, fill=\"white\", color=\"darkgrey\", size = 1.6, show.legend = TRUE) +\n  geom_label(data = seedbox_centroids |&gt; as.data.frame(), \n             aes(X, Y, label = paste0(\"Seedbox #\", seedbox)), size=3.2, nudge_x=-0.000084, nudge_y = 0.000022) +\n  geom_sf(data = seedbox |&gt; \n            st_transform(4326) |&gt; \n            st_buffer(8), fill = NA, color = NA, linewidth = 0.5) +\n  scale_fill_distiller(\n    name = bquote(atop(\"Settlers per\", \"tile (75 cm\"^2*\")\")),\n    palette = \"RdYlBu\",\n    direction = -1,\n    na.value = \"transparent\",\n    breaks = log(breaks_vals),\n    labels = breaks_vals\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 6.5),\n    axis.text.y = element_text(size = 6.5),\n    legend.position = c(0.85, 0.35),\n    legend.title = element_text(size=7),\n    legend.text = element_text(size=5),\n    legend.background = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank(),\n    legend.direction = \"vertical\") + \n  xlab(\"\") + \n  ylab(\"\")\n\n\n\n\n\n\n\n\n\n\n\nFigure 3b\nmaximum settlement density within each seedbox for all tiles (including tiles immediately adjacent to the seedbox) and for outer tiles (&gt;50 cm from each seedbox)\n\n\nCode\n### generate summary data\nsummary_data &lt;- seedbox |&gt;\n  as.data.frame() |&gt; \n  select(-geometry, -signal) |&gt; \n  rbind(tiles_slrp) |&gt; \n  mutate(seedbox=as.factor(seedbox)) |&gt; \n  group_by(seedbox) |&gt;\n  summarise(\n    settlers_mean = mean(settlers, na.rm = TRUE),\n     settlers_max = max(settlers, na.rm = TRUE),\n    settlers_se = sd(settlers, na.rm = TRUE) / sqrt(n()),  # Standard error\n    .groups = \"drop\"\n  ) |&gt;\n  mutate(\n    lower_ci = settlers_mean - qt(0.80, df = n() - 1) * settlers_se,  # Lower bound\n    upper_ci = settlers_mean + qt(0.80, df = n() - 1) * settlers_se   # Upper bound\n  )\n\n# filter to only outer tiles\nseedbox_outer &lt;- seedbox |&gt; filter(!id %in% inner)\n\n# Calculate mean and 95% CI for settlers grouped by seedbox\nsummary_data_outer &lt;- seedbox_outer |&gt;\n  as.data.frame() |&gt; \n  select(-geometry, -signal) |&gt; \n  rbind(tiles_slrp) |&gt; \n  mutate(seedbox=as.factor(seedbox)) |&gt; \n  group_by(seedbox) |&gt;\n  summarise(\n    settlers_mean = mean(settlers, na.rm = TRUE),\n     settlers_max = max(settlers, na.rm = TRUE),\n    settlers_se = sd(settlers, na.rm = TRUE) / sqrt(n()),  # Standard error\n    .groups = \"drop\"\n  ) |&gt;\n  mutate(\n    lower_ci = settlers_mean - qt(0.80, df = n() - 1) * settlers_se,  # Lower bound\n    upper_ci = settlers_mean + qt(0.80, df = n() - 1) * settlers_se   # Upper bound\n  ) \n\n\nsummary_data$group &lt;- \"inner\"\nsummary_data_outer$group &lt;- \"outer\"\ncombined_data &lt;- bind_rows(summary_data, summary_data_outer) |&gt;\n  mutate(seedbox = factor(seedbox, levels = 0:5, labels = c(\"reference\", paste0(\"seedbox \", 1:5))))\n\n\nggplot(combined_data, aes(x = seedbox, y = settlers_max, fill = group)) +\n  geom_bar(stat = \"identity\", position = \"stack\", color = \"black\", width = 0.6, linewidth=0.3) +\n  scale_fill_manual(\n    values = c(\"inner\" = \"turquoise4\", \"outer\" = \"turquoise3\"),\n    labels = c(\"inner\" = \"Adjacent tiles\", \"outer\" = \"outer tiles\"),\n    name = NULL\n  ) +\n  labs(x=\"\", y = expression(\"Maximum settlers per tile (75 cm\"^2*\")\"), \" (75cm2)\") +\n    geom_vline(xintercept = 1, linewidth = 14, alpha=0.06) +\n  ylim(0, 1200) +\n  theme_bw() +\n  theme(\n    axis.text.x = element_blank(), #(angle = 45, vjust = 0.9, hjust = 1),\n    axis.title.y = element_text(size=8),\n    legend.position = c(0.30, 0.92),\n    legend.background = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank(),\n    legend.text = element_text(size = 6), \n    legend.key.size = unit(0.6, \"lines\"),\n    plot.margin = margin(5, 5, 0, 5)\n  )\n\n\n\n\n\n\n\n\n\n\n\nFigure 2c\nmean settlement density per tile for the reference site and five seedboxes (horizontal line = mean settlement across all seedboxes, 3.65 larvae tile-1)\n\n\nCode\nsummary_data_plot &lt;-  seedbox_outer |&gt;\n  as.data.frame() |&gt; \n  select(-geometry, -signal) |&gt; \n  rbind(tiles_slrp) |&gt; \n  mutate(seedbox=as.factor(seedbox)) |&gt; \n  group_by(seedbox) |&gt;\n  summarise(\n    settlers_mean = mean(settlers, na.rm = TRUE),\n     settlers_max = max(settlers, na.rm = TRUE),\n    settlers_se = sd(settlers, na.rm = TRUE) / sqrt(n()),  # Standard error\n    .groups = \"drop\"\n  ) |&gt;\n  mutate(\n    lower_ci = settlers_mean - qt(0.80, df = n() - 1) * settlers_se,  # Lower bound\n    upper_ci = settlers_mean + qt(0.80, df = n() - 1) * settlers_se   # Upper bound\n  ) |&gt; \n\n  mutate(seedbox = factor(seedbox, levels = 0:6, labels = c(\"Reference\", paste0(\"Seedbox \", 1:6))))\n\n\n\n\n\nggplot() + theme_bw() +\n  geom_bar(data = summary_data_plot, aes(x = seedbox, y = settlers_mean, fill = settlers_mean), \n           linewidth = 0.3, show.legend = FALSE, stat = \"identity\", color = \"black\", width = 0.7, alpha=0.9) +\n  geom_hline(yintercept = mean(seedbox_outer$settlers), alpha = 0.3) +\n  geom_errorbar(data = summary_data_plot, aes(x = seedbox, y = settlers_mean, \n                                              ymin = settlers_mean - settlers_se, \n                                              ymax = settlers_mean + settlers_se), width = 0.2) +\n  scale_fill_distiller(palette = \"YlGnBu\", direction = 1) +\n  geom_vline(xintercept = 1, linewidth = 14, alpha = 0.06) +\n  labs(\n    x = \"\", \n    y = expression(\"Mean density per outer tile (75 cm\"^2*\")\")\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 0, vjust = 0.9, hjust = 0.5, size = 4.5),\n    axis.title.y = element_text(size = 8),\n    plot.margin = margin(t = 0, r = 5, b = 5, l = 5)\n  )\n\n\n\n\n\n\n\n\n\n\n\nFigure 2d\nBayesian posterior median estimates (with 95% credible intervals) from the zero-inflated Poisson model of settlement within seedbox tiles relative to the baseline “natural settlement” at the reference site (with exp(β) or x-fold differences above).\n\n\nCode\nlibrary(brms)\nlibrary(tidybayes)\nconflicted::conflicts_prefer(brms::dstudent_t)\nconflicted::conflicts_prefer(brms::pstudent_t)\nconflicted::conflicts_prefer(brms::qstudent_t)\nconflicted::conflicts_prefer(brms::rstudent_t)\n\nseedbox_outer_brms &lt;- seedbox_outer |&gt;  as.data.frame() |&gt; \n  select(-geometry, -signal) |&gt; \n  rbind(tiles_slrp) |&gt; \n  mutate(seedbox=as.factor(seedbox)) |&gt; \n  mutate(type = ifelse(seedbox==\"0\", \"ctrl\", \"seed\"))\n\n\nzi_model_outer &lt;- brm(\n  settlers ~ seedbox,\n  family = zero_inflated_poisson(),\n  data = seedbox_outer_brms,\n  chains = 4,\n  cores = 4,\n  iter = 2000,\n  silent=2,\n  refresh = 0\n)\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nusing C compiler: ‘Apple clang version 17.0.0 (clang-1700.0.13.3)’\nusing SDK: ‘MacOSX15.4.sdk’\nclang -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DUSE_STANC3 -DSTRICT_R_HEADERS  -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION  -D_HAS_AUTO_PTR_ETC=0  -include '/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/opt/R/arm64/include    -fPIC  -O3 -mtune=native -march=native -c foo.c -o foo.o\nIn file included from &lt;built-in&gt;:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22:\nIn file included from /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RcppEigen/include/Eigen/Core:19:\n/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:679:10: fatal error: 'cmath' file not found\n  679 | #include &lt;cmath&gt;\n      |          ^~~~~~~\n1 error generated.\nmake: *** [foo.o] Error 1\n\n\nCode\n# # Extract posterior draws for coefficients\nsummary_draws_outer&lt;- zi_model_outer %&gt;%\n  tidybayes::spread_draws(b_seedbox1, b_seedbox2, b_seedbox3, b_seedbox4, b_seedbox5) |&gt;\n  pivot_longer(cols = starts_with(\"b_seedbox\"),\n               names_to = \"seedbox\",\n               values_to = \"estimate\") %&gt;%\n  mutate(seedbox = gsub(\"b_seedbox\", \"\", seedbox)) %&gt;% # Remove \"b_\" prefix\n  group_by(seedbox) %&gt;%\n  median_qi(estimate)\n\n\nPlot:\n\n\nCode\n#zi_model_outer_nogroup %&gt;% variables()\n\nggplot(summary_draws_outer, aes(x = seedbox, fill=estimate, color=estimate, y = (estimate), ymin = (.lower), ymax = (.upper))) +\n  geom_pointrange(size=0.8, shape=21, stroke=0.5, show.legend=FALSE) +\n  geom_text(aes(label=paste0(\"x\",round(exp(estimate),1))), size=3, color=\"black\", nudge_x = 0.2) +\n scale_color_distiller(\n  palette = \"YlGnBu\",\n  direction = 1,\n  limits = c(0, 4),              # set desired range\n  oob = scales::squish             # squish out-of-bounds to nearest limit\n) +\n scale_fill_distiller(\n  palette = \"YlGnBu\",\n  direction = 1,\n  limits = c(0, 4),              # set desired range\n  oob = scales::squish             # squish out-of-bounds to nearest limit\n) +\n\n  coord_flip() +\n  geom_hline(yintercept=1, linewidth=1, alpha=0.3) +\n  ylim(0,6) +\n  labs(x = \"Seedbox\",\n       y = expression(beta~\"coefficient (log scale)\")) +\n  theme_bw() # + \n\n\n\n\n\n\n\n\n\nCode\n   # theme(\n   #  axis.text.x = element_text(size = 6.5),\n   #  axis.text.y = element_text(size=6.5),\n   #  axis.title = element_text(size=6.5),\n   #  axis.title.y = element_text(margin = margin(r = 5))  # reduce right margin of y-axis title\n   #  )\n\n\n\n\nTable S1\nPosterior means from Bayesian zero-inflated Poisson model\n\n\nCode\ndiagnostics &lt;- zi_model_outer |&gt;\n  as_draws_df() |&gt;\n  tidybayes::summarise_draws() |&gt;\n  filter(str_detect(variable, \"^b_\")) |&gt;\n  mutate(\n    Parameter = str_remove(variable, \"^b_\"),\n    Estimate = round(mean, 2),\n    Error = round(sd, 2),\n    `Lower CI (95%)` = round(q5, 2),\n    `Upper CI (95%)` = round(q95, 2),\n    Rhat = round(rhat, 2),\n    `Bulk ESS` = round(ess_bulk),\n    `Tail ESS` = round(ess_tail)\n  ) |&gt;\n  select(Parameter, Estimate, Error, `Lower CI (95%)`, `Upper CI (95%)`, Rhat, `Bulk ESS`, `Tail ESS`)\n\n\nDT::datatable(diagnostics, rownames = FALSE, options = list(\n  pageLength = 10,\n  dom = 't',\n  ordering = FALSE\n))"
  },
  {
    "objectID": "Figure S1.html",
    "href": "Figure S1.html",
    "title": "Figure S1",
    "section": "",
    "text": "Daily wind speed (± min/max) and average wind direction for Lizard Island October 2024 - February 2025\n\n\nCode\n# load libraries\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(readxl)\nlibrary(leaflet)\nlibrary(dataaimsr)\n\nlizard_wind_speed &lt;- aims_data(\"weather\",\n  filters = list(\n    series_id = 3484,\n    from_date = \"2024-07-10\",\n    thru_date = \"2025-02-28\"\n  ),\n  api_key = my_api_key\n)\n\nlizard_wind_direction &lt;- aims_data(\"weather\",\n  filters = list(\n    series_id = 3485,\n    from_date = \"2024-07-10\",\n    thru_date = \"2025-02-24\"\n  ),\n  api_key = my_api_key\n)\n\n# Prepare daily summary\nwind_daily &lt;- lizard_wind_speed |&gt;\n  mutate(date = as.Date(time)) |&gt;\n  group_by(date) |&gt;\n  summarise(\n    mean_speed = mean(qc_val, na.rm = TRUE),\n    min_speed = min(qc_val, na.rm = TRUE),\n    max_speed = max(qc_val, na.rm = TRUE)\n  )\n\n# Join with direction\nwind_direction_daily &lt;- lizard_wind_direction |&gt;\n  mutate(date = as.Date(time)) |&gt;\n  group_by(date) |&gt;\n  summarise(mean_dir = mean(qc_val, na.rm = TRUE))\n\n# Combine\nwind_combined &lt;- left_join(wind_daily, wind_direction_daily, by = \"date\") |&gt;\n  mutate(dir_rad = (270 - mean_dir) * pi / 180) # convert to radians, flip for plotting\n\nwind_combined &lt;- wind_combined |&gt;\n  mutate(\n    dir_rad = (270 - mean_dir) * pi / 180,\n    dx = sin(dir_rad),\n    dy = cos(dir_rad)\n  )\n\nggplot() +\n  theme_bw() +\n  geom_ribbon(data = wind_combined, aes(x = date, ymin = min_speed, ymax = max_speed), fill = \"lightblue\", alpha = 0.3) +\n  geom_line(data = wind_combined, aes(x = date, y = mean_speed), color = \"blue\") +\n  geom_segment(\n    data = wind_combined, aes(\n      x = date,\n      xend = date + dx * 0.25, # adjust 0.25 for horizontal scaling\n      y = -8,\n      yend = -8 + dy * 8 # adjust 2 for arrow height\n    ),\n    arrow = arrow(length = unit(0.1, \"cm\")),\n    linewidth = 0.5\n  ) +\n  scale_y_continuous(limits = c(-20, NA), expand = expansion(mult = c(0, 0.05))) +\n  labs(y = \"Wind Speed (m/s)\", x = \"Date\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Larval Seedboxes",
    "section": "",
    "text": "Reproducible Code and Data Repository for Doropoulos et al. (in review) \"Larval seedboxes: a modular and effective tool for scaling coral reef restoration\"\n\nAbstract\n\nNatural recovery of degraded coral reefs is constrained by low larval recruitment, limiting restoration at ecologically meaningful scales. While propagule-based approaches have proven effective in plant-dominated systems, scaling larval restoration for sessile invertebrates like corals remains challenging. Traditional coral larval methods rely on net enclosures, restricting impact to small areas (\\&lt;75 m²). We developed and tested a modular, passive larval delivery system – the larval seedbox – to overcome these spatial constraints. Each unit (600 × 500 × 300 mm; 11 kg) enables delayed release of competent larvae near the benthos, enhancing substrate encounter rates over broader areas. At Lizard Island (Great Barrier Reef), five seedboxes delivered \\~14 million larvae across \\~2 ha of degraded reef. Larval release coincided with slack currents to facilitate local retention and subsequent dispersal. Settlement was assessed on 234 tiles placed in concentric arrays around each seedbox. After 48 hours, 85% of tiles had settlers (up to 1,041 per tile), with mean densities 24-times greater than background levels. Enhanced settlement was directly quantified across \\&gt;470 m², with spatial modelling estimating \\&gt;3,000 m² via tidally driven dispersal. The larval seedbox enables unrestrained, scalable coral larval seeding and represents a practical advance toward broad-scale reef restoration`\n\n\nContact\ngeorge.roff@csiro.au\nhttps://github.com/marine-ecologist/seedbox"
  }
]